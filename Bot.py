import logging
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, ConversationHandler, CallbackContext

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
TOKEN = "8434037705:AAGLimloZYPDEIpNFnBNpkY24z0qaBC3oEU"
LEADER_ID = 7896463644

# –í–æ–ø—Ä–æ—Å—ã –¥–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏
QUESTIONS = [
    "–¢–≤–æ–π –∏–≥—Ä–æ–≤–æ–π –Ω–∏–∫?",
    "–¢–≤–æ–π –∏–≥—Ä–æ–≤–æ–π UID?",
    "–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?",
    "–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?"
]

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data = {}

# --- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ---
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

logger = logging.getLogger(__name__)

# --- –≠—Ç–∞–ø—ã —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ ---
ASK_NICK, ASK_UID, ASK_NAME, ASK_AGE = range(4)

# --- –ö–æ–º–∞–Ω–¥—ã ---
def start(update: Update, context: CallbackContext):
    reply_keyboard = [['–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É', '–ò–Ω—Ñ–æ']]
    update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! üëªüõ°Ô∏è\n"
        "–Ø SpectralGuardBot ‚Äî –±—ã–ª —Å–æ–∑–¥–∞–Ω –¥–ª—è —É–¥–æ–±–Ω–æ–π –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∫–ª–∞–Ω.\n"
        "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True, resize_keyboard=True)
    )

def info(update: Update, context: CallbackContext):
    update.message.reply_text(
        "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –≤ –∫–ª–∞–Ω:\n\n"
        "–ß—Ç–æ–±—ã –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É'.\n"
        "–ü–æ—Å–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –ª–∏–¥–µ—Ä –∫–ª–∞–Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏—Ç –∑–∞—è–≤–∫—É –∏ —Å–æ–æ–±—â–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç.\n\n"
        "–ü—Ä–∏–º–µ—Ä –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è:\n"
        "–û–ø–∏—Å–∞–Ω–∏–µ:\n–ò–º—è:\n–í–æ–∑—Ä–∞—Å—Ç:\n–ò–≥—Ä–æ–≤–æ–µ –∏–º—è:\nUID:\n–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: (–µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ)"
    )

def start_application(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    user_data[user_id] = {}
    update.message.reply_text(QUESTIONS[0])
    return ASK_NICK

def ask_uid(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    user_data[user_id]['nick'] = update.message.text
    update.message.reply_text(QUESTIONS[1])
    return ASK_UID

def ask_name(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    user_data[user_id]['uid'] = update.message.text
    update.message.reply_text(QUESTIONS[2])
    return ASK_NAME

def ask_age(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    user_data[user_id]['name'] = update.message.text
    update.message.reply_text(QUESTIONS[3])
    return ASK_AGE

def finish_application(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    user_data[user_id]['age'] = update.message.text
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏ –¥–ª—è –ª–∏–¥–µ—Ä–∞
    application_text = (
        f"–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç {update.message.from_user.full_name}:\n\n"
        f"–ò–≥—Ä–æ–≤–æ–π –Ω–∏–∫: {user_data[user_id]['nick']}\n"
        f"UID: {user_data[user_id]['uid']}\n"
        f"–ò–º—è: {user_data[user_id]['name']}\n"
        f"–í–æ–∑—Ä–∞—Å—Ç: {user_data[user_id]['age']}\n\n"
        "–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–ª–∞–Ω –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏."
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–∏–¥–µ—Ä—É
    context.bot.send_message(chat_id=LEADER_ID, text=application_text)
    
    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    update.message.reply_text(
        "–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ.\n"
        "–õ–∏–¥–µ—Ä –∫–ª–∞–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∏—Ç –µ—ë –∏ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏."
    )
    
    return ConversationHandler.END

def cancel(update: Update, context: CallbackContext):
    update.message.reply_text("–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –ø–æ–¥–∞—á—É –∑–∞—è–≤–∫–∏.")
    return ConversationHandler.END

# --- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ---
def main():
    updater = Updater(TOKEN)
    dp = updater.dispatcher

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("info", info))

    # Conversation –¥–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏
    conv_handler = ConversationHandler(
        entry_points=[MessageHandler(Filters.regex('^–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É$'), start_application)],
        states={
            ASK_NICK: [MessageHandler(Filters.text & ~Filters.command, ask_uid)],
            ASK_UID: [MessageHandler(Filters.text & ~Filters.command, ask_name)],
            ASK_NAME: [MessageHandler(Filters.text & ~Filters.command, ask_age)],
            ASK_AGE: [MessageHandler(Filters.text & ~Filters.command, finish_application)]
        },
        fallbacks=[CommandHandler('cancel', cancel)]
    )

    dp.add_handler(conv_handler)

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
